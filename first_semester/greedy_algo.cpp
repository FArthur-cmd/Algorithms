/*
В город N приехал цирк с командой атлетов.
Они хотят удивить горожан города N —
выстроить из своих тел башню максимальной высоты.
Башня — это цепочка атлетов, первый стоит на земле,
второй стоит у него на плечах, третий стоит на плечах у второго и т.д.
Каждый атлет характеризуется силой si (kg) и массой mi (kg).
Сила — это максимальная масса, которую атлет способен держать у себя на плечах.
К сожалению ни один из атлетов не умеет программировать,
так как всю жизнь они занимались физической подготовкой,
и у них не было времени на изучение языков программирования.
Помогите им, напишите программу, которая определит максимальную высоту башни,
которую они могут составить. Известно, что если атлет тяжелее, то он и сильнее:
если mi>mj, то si > sj. Атлеты равной массы могут иметь различную силу.

Формат ввода
Вход содержит только пары целых чисел — массу и силу атлетов.
Число атлетов 1 ≤ n ≤ 100000. Масса и сила являются положительными целыми числами
меньше, чем 2000000.

Формат вывода
Выход должен содержать натуральное число — максимальную высоту башни.
*/
#include <iostream>
#include <vector>
#include <algorithm>
/*
 Алгоритм рещения: пока считывать получается, считываем массу и силу атлета и добваляем
 в соответствующий массив. Так как большей массе соответствует большая сила, то отдельная
 сортировка массивов не нарушает порядок соответствия масса-сила(меньшему элементу будет
 соответствовать меньшая сила). Берем человека с наименьшей массой и ищем, кто его может поднять
 так как массив отсортирован мы найдем человека с наименьшей массой(из всех, кто может поднять)
 тогда сумма масс наименьшая из возможных для верхних уровней конечной лестницы.
 Повторяем поиск человека, который может поднять уже найденных.
 Считаем количество людей, так как оно соответствует ответу задачи.
*/
long long int solution (std::vector<long long int> &mass,
                        std::vector<long long int> &strength) {
    std::sort(mass.begin(),mass.end());
    std::sort(strength.begin(),strength.end());
    long long int curr_mass = mass[0], counter = 1;
    for(size_t i = 1; i < mass.size(); i++) {
        if (strength[i] >= curr_mass) {
            curr_mass += mass[i];
            counter ++;
        }
    }
    return counter;
}

int main() {
    std::vector<long long int> mass;
    std::vector<long long int> strength;
    long long int ms, st;
    while (std::cin >> ms >> st) {
        mass.push_back(ms);
        strength.push_back(st);
    }
    std::cout << solution(mass,strength);
    return 0;
}
